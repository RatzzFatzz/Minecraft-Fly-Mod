plugins {
    id 'maven-publish'
    id 'fabric-loom' version '0.5.9'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = 'flymod'
version = '1.6.1'
group = 'at.pcgf.flymod'

repositories {
    jcenter()
    mavenCentral()
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven { url 'https://minecraft.curseforge.com/api/maven' }
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/releases'}
}

ext {
    minecraft_version = '1.16.5'

    yarn_mappings = '1.16.5+build.8'
    loader_version = '0.11.3'
    fabric_version = '0.29.4+1.16'

    cloth_config_version = '4.11.19'
    mod_menu_version = '1.16.9'
}

dependencies {
    minecraft(
            [group: 'com.mojang', name: 'minecraft', version: "${minecraft_version}"]
    )

    mappings(
            [group: 'net.fabricmc', name: 'yarn', version: "${yarn_mappings}"]
    )

    modCompile(
            [group: 'net.fabricmc', name: 'fabric-loader', version: "${loader_version}"],
            [group: 'net.fabricmc.fabric-api', name: 'fabric-api', version: "${fabric_version}"],
            [group: 'me.shedaniel.cloth', name: 'cloth-config-fabric', version: "${cloth_config_version}"],
            [group: 'com.terraformersmc', name: 'modmenu', version: "${mod_menu_version}"]
    )
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}